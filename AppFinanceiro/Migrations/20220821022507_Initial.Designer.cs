// <auto-generated />
using System;
using Financ.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Financ.API.Migrations
{
    [DbContext(typeof(FinancContext))]
    [Migration("20220821022507_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Financ.Data.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("category", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Cust")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOrigin")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProfilePay")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Recurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdOrigin");

                    b.HasIndex("IdProfilePay");

                    b.ToTable("expense", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.Income", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Cust")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdOrigin")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Recurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdOrigin");

                    b.ToTable("income", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.Origin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("origin", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.ProfileExpense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExpense")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdExpense")
                        .IsUnique();

                    b.HasIndex("IdUser");

                    b.ToTable("profileExpense", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.ProfileIncome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdIncome")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdIncome")
                        .IsUnique();

                    b.HasIndex("IdUser");

                    b.ToTable("profileIncome", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.ProfilePay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdExpanse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTypePay")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Parcel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTypePay");

                    b.ToTable("profilePay", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.TypePay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("flag")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("typePay", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("user", "dbo");
                });

            modelBuilder.Entity("Financ.Data.Models.Expense", b =>
                {
                    b.HasOne("Financ.Data.Models.Category", "Category")
                        .WithMany("Expense")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financ.Data.Models.Origin", "Origin")
                        .WithMany("Expense")
                        .HasForeignKey("IdOrigin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financ.Data.Models.ProfilePay", "ProfilePay")
                        .WithMany("Expense")
                        .HasForeignKey("IdProfilePay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Origin");

                    b.Navigation("ProfilePay");
                });

            modelBuilder.Entity("Financ.Data.Models.Income", b =>
                {
                    b.HasOne("Financ.Data.Models.Origin", "Origin")
                        .WithMany("Income")
                        .HasForeignKey("IdOrigin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("Financ.Data.Models.ProfileExpense", b =>
                {
                    b.HasOne("Financ.Data.Models.Expense", "Expense")
                        .WithOne("ProfileExpense")
                        .HasForeignKey("Financ.Data.Models.ProfileExpense", "IdExpense")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financ.Data.Models.User", "User")
                        .WithMany("ProfileExpense")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expense");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Financ.Data.Models.ProfileIncome", b =>
                {
                    b.HasOne("Financ.Data.Models.Income", "Income")
                        .WithOne("ProfileIncome")
                        .HasForeignKey("Financ.Data.Models.ProfileIncome", "IdIncome")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Financ.Data.Models.User", "User")
                        .WithMany("ProfileIncome")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Income");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Financ.Data.Models.ProfilePay", b =>
                {
                    b.HasOne("Financ.Data.Models.TypePay", "TypePay")
                        .WithMany("ProfilePay")
                        .HasForeignKey("IdTypePay")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypePay");
                });

            modelBuilder.Entity("Financ.Data.Models.Category", b =>
                {
                    b.Navigation("Expense");
                });

            modelBuilder.Entity("Financ.Data.Models.Expense", b =>
                {
                    b.Navigation("ProfileExpense")
                        .IsRequired();
                });

            modelBuilder.Entity("Financ.Data.Models.Income", b =>
                {
                    b.Navigation("ProfileIncome")
                        .IsRequired();
                });

            modelBuilder.Entity("Financ.Data.Models.Origin", b =>
                {
                    b.Navigation("Expense");

                    b.Navigation("Income");
                });

            modelBuilder.Entity("Financ.Data.Models.ProfilePay", b =>
                {
                    b.Navigation("Expense");
                });

            modelBuilder.Entity("Financ.Data.Models.TypePay", b =>
                {
                    b.Navigation("ProfilePay");
                });

            modelBuilder.Entity("Financ.Data.Models.User", b =>
                {
                    b.Navigation("ProfileExpense");

                    b.Navigation("ProfileIncome");
                });
#pragma warning restore 612, 618
        }
    }
}
